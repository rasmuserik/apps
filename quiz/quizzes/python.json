{
  "title": "Python quiz",
  "questions": [
    {
      "question": "Hvad udskriver 'print(2 + 2)'?",
      "correct_answer": "4",
      "wrong_answers": ["2", "22", "0", "5", "3", "6"],
      "silly_answers": ["Banana", "Hello World", "42"],
      "explanation": "'2 + 2' evalueres til 4 i Python. '+' er en aritmetisk operator, der l√¶gger tal sammen."
    },
    {
      "question": "Hvad g√∏r 'len()' funktionen?",
      "correct_answer": "Returnerer l√¶ngden af en liste eller streng",
      "wrong_answers": [
        "Sorterer en liste",
        "G√∏r alle bogstaverne i en streng store",
        "Reverserer en liste",
        "Omdanner en integer til en streng",
        "Samler to lister",
        "Multiplikerer alle elementer i en liste"
      ],
      "silly_answers": [
        "Starter en tidsmaskine",
        "Bestiller en pizza",
        "G√∏r dig til en Python-ekspert"
      ],
      "explanation": "'len()' returnerer antallet af elementer i en liste eller antallet af tegn i en streng."
    },
    {
      "question": "Hvordan laver man en kommentar i Python?",
      "correct_answer": "# Dette er en kommentar",
      "wrong_answers": [
        "// Dette er en kommentar",
        "-- Dette er en kommentar",
        "/* Dette er en kommentar */",
        "<!-- Dette er en kommentar -->",
        "' Dette er en kommentar '",
        "/* Dette er en kommentar"
      ],
      "silly_answers": [
        "Dette er en kommentar, ikke?",
        "Jeg kan ikke kommentere det",
        "Dette er en Python, ikke en kommentar"
      ],
      "explanation": "I Python bruger man '#' for at skrive en enkelt-linje kommentar."
    },
    {
      "question": "Hvad g√∏r 'str.lower()'?",
      "correct_answer": "G√∏r alle bogstaver i strengen sm√•",
      "wrong_answers": [
        "G√∏r alle bogstaver i strengen store",
        "Returnerer l√¶ngden af en streng",
        "G√∏r den f√∏rste bogstav i hver s√¶tning stor",
        "Omdanner en liste til en streng",
        "Returnerer en liste af ord fra en streng",
        "Reverserer en streng"
      ],
      "silly_answers": [
        "Laver en smoothie",
        "Henter vejret",
        "S√¶nker strengens selvv√¶rd"
      ],
      "explanation": "'str.lower()' returnerer en ny streng, hvor alle de store bogstaver er omdannet til sm√• bogstaver."
    },
    {
      "question": "Hvad g√∏r 'list.append(element)'?",
      "correct_answer": "Tilf√∏jer et element til slutningen af listen",
      "wrong_answers": [
        "Inds√¶tter et element i starten af listen",
        "Sletter et element fra listen",
        "Sorterer listen",
        "Fjerner alle elementer fra listen",
        "Omdanner listen til en streng",
        "Omdanner en streng til en liste"
      ],
      "silly_answers": [
        "G√∏r listen glad",
        "Giver listen en hat",
        "Tilf√∏jer et element i en anden dimension"
      ],
      "explanation": "'list.append(element)' tilf√∏jer et element til slutningen af listen. Det √¶ndrer listen 'in-place', s√• du beh√∏ver ikke at tildele det til en ny variabel."
    },
    {
      "question": "Hvordan laver man en liste i Python?",
      "correct_answer": "[1, 2, 3]",
      "wrong_answers": [
        "(1, 2, 3)",
        "{1, 2, 3}",
        "1, 2, 3",
        "list(1, 2, 3)",
        "[1; 2; 3]",
        "array[1, 2, 3]"
      ],
      "silly_answers": [
        "[kaffe, kage, te]",
        "[42, livet, universet]",
        "[null, null, null]"
      ],
      "explanation": "I Python bruger man firkantede parenteser for at lave en liste. Elementer adskilles med komma."
    },
    {
      "question": "Hvordan starter en 'for'-l√∏kke normalt i Python?",
      "correct_answer": "for i in range(5):",
      "wrong_answers": [
        "for i <= 5:",
        "for(i=0; i<5; i++):",
        "for i from 0 to 5:",
        "for each i in 5:",
        "foreach i in range(5):",
        "for i until 5:"
      ],
      "silly_answers": [
        "for i in fridge:",
        "for i in outer space:",
        "for i in your dreams:"
      ],
      "explanation": "I Python bruger man 'for i in range(5):' for at lave en 'for'-l√∏kke, der k√∏rer 5 gange."
    },
    {
      "question": "Hvad g√∏r 'dict.keys()'?",
      "correct_answer": "Returnerer alle n√∏gler i en ordbog",
      "wrong_answers": [
        "Returnerer alle v√¶rdier i en ordbog",
        "Sletter alle n√∏gler i en ordbog",
        "Sorterer en ordbog",
        "Opretter en ny ordbog",
        "L√•ser en ordbog",
        "T√∏mmer en ordbog"
      ],
      "silly_answers": ["√Öbner en d√∏r", "Spiller klaver", "Finder skatten"],
      "explanation": "'dict.keys()' returnerer en liste-lignende objekt med alle n√∏gler i en ordbog."
    },
    {
      "question": "Hvordan definerer man en funktion i Python?",
      "correct_answer": "def min_funktion():",
      "wrong_answers": [
        "function min_funktion():",
        "define min_funktion:",
        "min_funktion() =",
        "min_funktion: =>",
        "func min_funktion():",
        "public void min_funktion():"
      ],
      "silly_answers": [
        "definitely min_funktion():",
        "def min_dysfunktion():",
        "dysfunction min_funktion():"
      ],
      "explanation": "I Python bruger man 'def' n√∏gleordet for at definere en funktion."
    },
    {
      "question": "Hvad udskriver 'print(True and False)'?",
      "correct_answer": "False",
      "wrong_answers": ["True", "Error", "True and False", "None", "0", "1"],
      "silly_answers": ["Maybe", "True or False", "Schrodinger's Cat"],
      "explanation": "'True and False' evalueres til 'False' i Python. 'and' er en logisk operator."
    },
    {
      "question": "Hvad g√∏r 'list.pop()'?",
      "correct_answer": "Fjerner og returnerer det sidste element i listen",
      "wrong_answers": [
        "Fjerner alle elementer fra listen",
        "Returnerer det f√∏rste element i listen",
        "Fjerner det f√∏rste element i listen",
        "Tilf√∏jer et element til listen",
        "Returnerer l√¶ngden af listen",
        "Omdanner listen til en streng"
      ],
      "silly_answers": [
        "Spiller popmusik",
        "Giver listen en lollipop",
        "Laver popcorn"
      ],
      "explanation": "'list.pop()' fjerner og returnerer det sidste element fra listen. Listen √¶ndres 'in-place'."
    },
    {
      "question": "Hvordan finder man typen af en variabel i Python?",
      "correct_answer": "type(variabel)",
      "wrong_answers": [
        "find_type(variabel)",
        "variabel.type",
        "typeof(variabel)",
        "get_type(variabel)",
        "datatype(variabel)",
        "variabel->type"
      ],
      "silly_answers": [
        "guess_type(variabel)",
        "magic_type(variabel)",
        "variabel, reveal your type!"
      ],
      "explanation": "Funktionen 'type()' returnerer typen af en given variabel."
    },
    {
      "question": "Hvordan kan man fange en exception i Python?",
      "correct_answer": "try: ... except: ...",
      "wrong_answers": [
        "catch: ... try: ...",
        "begin: ... rescue: ...",
        "try: ... catch: ...",
        "try: ... finally: ...",
        "error: ... handle: ...",
        "if error: ... then: ..."
      ],
      "silly_answers": [
        "Oops: ... MyBad: ...",
        "try: ... oopsie_daisy: ...",
        "try_not_to_fail: ... or_else: ..."
      ],
      "explanation": "I Python bruger man 'try' og 'except' blokke for at fange undtagelser og h√•ndtere fejl."
    },
    {
      "question": "Hvordan kan man sammenk√¶de to strenge i Python?",
      "correct_answer": "streng1 + streng2",
      "wrong_answers": [
        "streng1.append(streng2)",
        "streng1.concat(streng2)",
        "streng1 & streng2",
        "streng1.join(streng2)",
        "concat(streng1, streng2)",
        "streng1 -> streng2"
      ],
      "silly_answers": [
        "streng1 ‚ô• streng2",
        "streng1 ||| streng2",
        "streng1 U streng2"
      ],
      "explanation": "I Python bruger man '+' operatoren for at sammenk√¶de to strenge."
    },
    {
      "question": "Hvad er outputtet af 'print(5 // 2)'?",
      "correct_answer": "2",
      "wrong_answers": ["2.5", "3", "5", "1", "0", "7"],
      "silly_answers": ["Potato", "Division Error", "Why?"],
      "explanation": "'5 // 2' udf√∏rer heltalsdivision og returnerer 2. Dobbelt skr√•streg '//' bruges for heltalsdivision i Python."
    },
    {
      "question": "Hvad er den rigtige m√•de at konvertere en integer til en streng?",
      "correct_answer": "str(10)",
      "wrong_answers": [
        "int2str(10)",
        "10.toString()",
        "10 -> str",
        "String(10)",
        "str2int(10)",
        "to_str(10)"
      ],
      "silly_answers": ["str(üêç)", "ten_as_a_string()", "magic_str(10)"],
      "explanation": "'str()' funktionen i Python konverterer andre datatyper til strenge."
    },
    {
      "question": "Hvad er syntaxen for en if-s√¶tning i Python?",
      "correct_answer": "if betingelse:",
      "wrong_answers": [
        "if(betingelse)",
        "if betingelse then",
        "if(betingelse){}",
        "if: betingelse",
        "if betingelse do",
        "if [betingelse]"
      ],
      "silly_answers": [
        "if in doubt:",
        "if hungry, eat:",
        "if betingelse, wing it:"
      ],
      "explanation": "I Python bruger man 'if betingelse:' for at starte en if-s√¶tning."
    },
    {
      "question": "Hvad g√∏r 'break' i en l√∏kke?",
      "correct_answer": "Stopper l√∏kken",
      "wrong_answers": [
        "Genstarter l√∏kken",
        "Springer til n√¶ste iteration",
        "G√•r ud af programmet",
        "Paus√©r l√∏kken",
        "S√¶nker l√∏kke-hastigheden",
        "L√•ser l√∏kken"
      ],
      "silly_answers": [
        "Bryder computeren",
        "Udl√∏ser en pause-dans",
        "Spiller en solo p√• trommer"
      ],
      "explanation": "'break' stopper l√∏kken og forts√¶tter med den n√¶ste kodeblok efter l√∏kken."
    },
    {
      "question": "Hvad returnerer 'range(3)'?",
      "correct_answer": "[0, 1, 2]",
      "wrong_answers": [
        "[1, 2, 3]",
        "[0, 1, 2, 3]",
        "0, 1, 2",
        "3",
        "0..2",
        "[0, 3]"
      ],
      "silly_answers": ["[œÄ, e, ‚àö2]", "[0, 1, 3, 5, 7]", "[a, b, c]"],
      "explanation": "'range(3)' returnerer et 'range'-objekt, der repr√¶senterer tallene [0, 1, 2]."
    },
    {
      "question": "Hvordan importeres hele 'math'-biblioteket?",
      "correct_answer": "import math",
      "wrong_answers": [
        "#include <math>",
        "using math",
        "from math import all",
        "require 'math'",
        "load math",
        "Math.new"
      ],
      "silly_answers": [
        "import wizardry",
        "import rocket_science",
        "import brainpower"
      ],
      "explanation": "I Python bruger man 'import math' for at importere alle funktioner og konstanter i 'math'-biblioteket."
    },
    {
      "question": "Hvad er outputtet af 'print(3 * 'abc')'?",
      "correct_answer": "abcabcabc",
      "wrong_answers": ["9", "abc3", "3abc", "Error", "abc * 3", "abcabc"],
      "silly_answers": [
        "abracadabra",
        "aaaabbbbbbcccccc",
        "Why would you do that?"
      ],
      "explanation": "I Python multiplicerer '3 * 'abc'' strengen 'abc' tre gange."
    },
    {
      "question": "Hvad betyder 'x != y'?",
      "correct_answer": "x er ikke lig med y",
      "wrong_answers": [
        "x er lig med y",
        "x er st√∏rre end y",
        "x er mindre end y",
        "x divideret med y",
        "x plus y",
        "x minus y"
      ],
      "silly_answers": [
        "x er venner med y",
        "x bryder op med y",
        "x er i familie med y"
      ],
      "explanation": "'!=' er en ulighedsoperator. 'x != y' er sand, hvis x ikke er lig med y."
    },
    {
      "question": "Hvordan initialiserer man en tom liste?",
      "correct_answer": "tom_liste = []",
      "wrong_answers": [
        "tom_liste = ()",
        "tom_liste = {}",
        "tom_liste = list",
        "tom_liste = 0",
        "tom_liste = None",
        "list() = tom_liste"
      ],
      "silly_answers": [
        "tom_liste = [ ] but sadder",
        "tom_liste = ü§∑‚Äç‚ôÄÔ∏è",
        "tom_liste = [void, void, void]"
      ],
      "explanation": "En tom liste kan initialiseres med firkantede parenteser '[]'."
    },
    {
      "question": "Hvad g√∏r 'str.upper()'?",
      "correct_answer": "G√∏r alle bogstaver i strengen store",
      "wrong_answers": [
        "G√∏r alle bogstaver i strengen sm√•",
        "Omdanner en liste til en streng",
        "Returnerer l√¶ngden af en streng",
        "G√∏r den f√∏rste bogstav i hver s√¶tning stor",
        "Returnerer den omvendte streng",
        "Omdanner strengen til en liste"
      ],
      "silly_answers": [
        "Skriger strengen",
        "Giver strengen en kasket",
        "Styrker strengen med vitaminer"
      ],
      "explanation": "'str.upper()' omdanner alle bogstaver i strengen til store bogstaver."
    },
    {
      "question": "Hvad returnerer 'len([1, 2, 3, 4])'?",
      "correct_answer": "4",
      "wrong_answers": [
        "1",
        "[1, 2, 3, 4]",
        "Error",
        "None",
        "[1, 2, 3]",
        "10"
      ],
      "silly_answers": ["Looong", "Infinity", "Four but louder"],
      "explanation": "'len()' returnerer antallet af elementer i en liste, i dette tilf√¶lde 4."
    }
  ]
}
